---
# This playbook should be executed using reinstall.sh script
# Developed for ansible version >= 1.7
- hosts: localhost
  connection: local
  gather_facts: yes

  vars_files:
    - devops/reinstall/vars/global_settings.yml
    - devops/reinstall/vars/environments/global_env.yml

  tasks:
    - name: Include specific variables per environment
      include_vars: "devops/reinstall/vars/environments/{{ pp_environment }}_env.yml"
      tags:
        - 'settings'
        - 'pre-settings'
        - 'post-settings'
        - 'modules-enable'
        - 'drush-commands'
        - 'solr-commands'
        - 'prepare-environment'
        - 'database-backup'
        - 'profile-workflow'
        - 'sql-workflow'
        - 'before-install'
        - 'after-install'

    - include: devops/reinstall/database_backup.yml
      when: make_backup
      tags: [ 'database-backup', 'before-install' ]

    - include: devops/reinstall/prepare_environment.yml
      tags: [ 'prepare-environment', 'before-install' ]

    - include: devops/reinstall/pre_settings.yml
      when: workflow_type == "sql" or not run_installation_process or run_installation_process == 'false'
      tags: [ 'settings', 'pre-settings', 'sql-workflow', 'before-install' ]

    - include: devops/reinstall/sql_workflow.yml
      when: workflow_type == "sql"
      tags: [ 'sql-workflow' ]

    - include: devops/reinstall/profile_workflow.yml
      when: workflow_type == "profile"
      tags: [ 'profile-workflow' ]

    - include: devops/reinstall/prepare_environment.yml
      tags: [ 'prepare-environment', 'after-install' ]

    - include: devops/reinstall/post_settings.yml
      tags: [ 'settings', 'post-settings', 'after-install' ]

    - include: devops/reinstall/modules_enable.yml
      tags: [ 'modules-enable', 'after-install' ]
      when: run_installation_process

    - include: devops/reinstall/solr.yml
      tags: [ 'solr-commands', 'after-install' ]
      become: yes
      when: use_solr

    - include: devops/reinstall/drush_commands.yml
      tags: [ 'drush-commands', 'after-install' ]
      when: run_installation_process
