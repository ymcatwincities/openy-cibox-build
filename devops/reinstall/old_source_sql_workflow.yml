---
# This script contains commands to manage "SQL/Profile workflow with source DB for migration":
# - Downloading database from remote host or use local dump
# - Importing to database

- name: Checking if latest old site db backup exists
  stat: path={{ backup_folder }}/{{ old_source_backup_name }} get_md5=no
  register: ob

- name: Droping old site database
  mysql_db: name={{ old_source_db_name }} state=absent login_user={{ mysql_user }} login_password={{ mysql_pass }}
  when: ob.stat.exists == false and (pp_environment == "demo" or pp_environment == "default")

- name: Creating old site  database
  mysql_db: name={{ old_source_db_name }} state=present login_user={{ mysql_user }} login_password={{ mysql_pass }}
  when: ob.stat.exists == false

# Vagrant build.
- name: Downloading latest old site db backup to local environment
  get_url: url={{ old_source_db_name_url }} dest={{ backup_folder }}/{{ old_source_backup_name }} force=yes
  when: ob.stat.exists == false and (pp_environment == "default" and ((ansible_env.USER is not defined or ansible_env.USER != "{{ ci_server_username }}") and (ansible_env.SUDO_USER is not defined or ansible_env.SUDO_USER != "{{ ci_server_username }}")))

- name: Removing possible old site abandoned dump
  shell: rm -rf {{ backup_folder }}/old_source_db.sql
  sudo: yes
  when: pp_environment == "default" and ((ansible_env.USER is not defined or ansible_env.USER != "{{ ci_server_username }}") and (ansible_env.SUDO_USER is not defined or ansible_env.SUDO_USER != "{{ ci_server_username }}"))

- name: Importing from remote old site backup
  mysql_db: name={{ old_source_db_name }} state=import target={{ backup_folder }}/{{ old_source_backup_name }} login_user={{ mysql_user }} login_password={{ mysql_pass }}
  sudo: yes
  when: ob.stat.exists == false and (pp_environment == "default" and ((ansible_env.USER is not defined or ansible_env.USER != "{{ ci_server_username }}") and (ansible_env.SUDO_USER is not defined or ansible_env.SUDO_USER != "{{ ci_server_username }}")))

# CI server build.
- name: Copy latest old site backup to build folder
  sudo: yes
  copy: src={{ backup_folder }}/{{ old_source_backup_name }} dest=./{{ old_source_backup_name }} force=yes mode=0644
  when: (old_site_db == true) and (pp_environment == "default" or pp_environment == "demo") and ((ansible_env.USER is defined and ansible_env.USER == "{{ ci_server_username }}") or (ansible_env.SUDO_USER is defined and ansible_env.SUDO_USER == "{{ ci_server_username }}"))

- name: Importing from old site local backup
  mysql_db: name={{ old_source_db_name }} state=import target=./{{ old_source_backup_name }} login_user={{ mysql_user }} login_password={{ mysql_pass }}
  sudo: yes
  when: (old_site_db == true) and (pp_environment == "default" or pp_environment == "demo") and ((ansible_env.USER is defined and ansible_env.USER == "{{ ci_server_username }}") or (ansible_env.SUDO_USER is defined and ansible_env.SUDO_USER == "{{ ci_server_username }}"))

- name: Remove old site local backup from build folder
  sudo: yes
  file: name=./{{ old_source_backup_name }} state=absent
  when: (old_site_db == true) and pp_environment == "default" or pp_environment == "demo"
